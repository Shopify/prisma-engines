// Generated by Xata Codegen 0.26.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Product",
    columns: [
      { name: "properties", type: "json", notNull: true, defaultValue: "{}" },
      { name: "properties_null", type: "json" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Product = InferredTypes["Product"];
export type ProductRecord = Product & XataRecord;

export type DatabaseSchema = {
  Product: ProductRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://Prisma-dlq8pi.us-east-1.xata.sh/db/js-connector",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
